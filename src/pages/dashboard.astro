---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";

const auth = getAuth(app);

/* Check current session */
if (!Astro.cookies.has("__session")) {
  return Astro.redirect("/signin");
}
const sessionCookie = Astro.cookies.get("__session")?.value ?? "";
const decodedCookie = await auth.verifySessionCookie(sessionCookie);
const user = await auth.getUser(decodedCookie.uid);

if (!user) {
  return Astro.redirect("/signin");
}
---

<Layout title="dashboard">
  <div
    class="min-h-screen flex flex-col items-center justify-center  text-yellow01 text-shadow-glow p-8"
  >
    <h1 class="text-2xl md:text-4xl font-bold mb-6 font-cmu">
      Welcome {user.displayName}
    </h1>
    <p class="text-lg md:text-xl mb-4 font-cmu">We are happy to see you here</p>
    <form
      action=`/api/db/upload/${user.uid}`
      method="post"
      enctype="multipart/form-data"
      class="w-full max-w-md px-4 py-6 bg-blue02 rounded shadow-lg"
    >
      <label for="description" class="block text-sm font-medium"
        >Description:</label
      >
      <input
        type="text"
        id="description"
        name="description"
        class="w-full mt-1 p-2 border border-gray-300 rounded"
      /><br />
      <label for="image" class="block text-sm font-medium mt-4"
        >Select image:</label
      >
      <input
        type="file"
        id="image"
        name="image"
        class="w-full mt-1 p-2rounded"
      /><br />
      <button
        type="submit"
        class="w-full mt-4 p-2 bg-blue01 text-yellow01 rounded hover:bg-blue02"
        >Upload</button
      >
    </form>
    <form action="/api/auth/signout" class="absolute top-4 right-4">
      <button
        type="submit"
        class="p-2 bg-blue01 text-yellow01 rounded hover:bg-blue02"
        >Sign out</button
      >
    </form>
  </div>
</Layout>

<script>
  const form = document.querySelector("form") as HTMLFormElement;
  const imageInput = document.getElementById("image") as HTMLInputElement;
  imageInput.addEventListener("change", (event) => {
    const file = (event.target as HTMLInputElement).files?.[0];
    if (!file) return;
    const reader = new FileReader();
    reader.onload = (e) => {
      const img = new Image();
      img.onload = () => {
        const canvas = document.createElement("canvas");
        const ctx = canvas.getContext("2d");
        canvas.width = 300; // Set your desired width here
        canvas.height = (300 * img.height) / img.width; // Maintain aspect ratio
        ctx?.drawImage(img, 0, 0, canvas.width, canvas.height);
        const resizedImage = canvas.toDataURL("image/jpeg", 0.8); // Set your desired quality here
        imageInput.src = resizedImage;
      };
      img.src = e.target?.result as string;
    };
    reader.readAsDataURL(file);
  });

  form.addEventListener("submit", (event) => {
    event.preventDefault();
    const descriptionInput = document.getElementById(
      "description"
    ) as HTMLInputElement;
    const description = descriptionInput.value.trim();
    if (!description || !imageInput.src) {
      alert("Please fill in all fields.");
      return;
    }
    (event.target as HTMLFormElement).submit();
  });
</script>

