---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session")?.value ?? "";
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (decodedCookie) {
    return Astro.redirect("/view");
  }
}
---

<Layout title="Sign in">
  <div
    class="relative min-h-screen flex flex-col items-center justify-center text-yellownivut text-shadow-glow"
  >
    <h1 class="text-5xl font-normal mb-6 font-sov">Forever Youth</h1>
    <h2 class="text-xl font-semibold mb-4 font-pk">
      To the land of the young
    </h2>
    <button
      id="google"
      class="font-pk font-semibold flex items-center justify-center p-2 bg-bluenivut text-yellownivut hover:bg-blue02 rounded-3xl"
    >
      <img
        src="/images/images.png"
        alt="Google Logo"
        class="w-6 h-6 mr-2 rounded-full"
      />
      Sign in with Google
    </button>
    <div id="loader" class="hidden absolute inset-0 flex items-center justify-center">
      <div class="loader"></div>
    </div>
  </div>
</Layout>

<style>
.loader {
  border: 4px solid rgba(0, 0, 0, 0.1);
  width: 36px;
  height: 36px;
  border-radius: 50%;
  border-left-color: #09f;
  animation: spin 1s ease infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
</style>

<script>
  import {
    getAuth,
    inMemoryPersistence,
    GoogleAuthProvider,
    signInWithPopup,
  } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);
  auth.setPersistence(inMemoryPersistence);

  const googleSignin = document.querySelector("#google");
  const loader = document.querySelector("#loader");

  googleSignin?.addEventListener("click", async () => {
    loader?.classList.remove("hidden");
    try {
      const provider = new GoogleAuthProvider();
      const userCredential = await signInWithPopup(auth, provider);
      const idToken = await userCredential.user.getIdToken();
      const res = await fetch("/api/auth/signin", {
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
      });

      if (res.redirected) {
        window.location.assign(res.url);
      }
    } catch (error) {
      console.error("Sign-in failed", error);
    } finally {
      loader?.classList.add("hidden");
    }
  });
</script>
